// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  user_id            String  @id @default(auto()) @map("_id") @db.ObjectId
  user_name          String  @unique
  user_email         String  @unique
  password           String
  user_profile       String?
  bio                String?
  projects Project[]
  is_blocked         Boolean @default(false)
  two_factor_enabled Boolean @default(false)
  createdAt DateTime @default(now())
}

type ProjectReference {
  title String
  link String
}

enum ProjectType {
  personal
  team
  company
}

enum TaskStatus {
  todo
  doing
  analysis
  code_review
  testing
  done
  released
}

enum ProjectStatus {
  pending
  onprogress
  completed
}

model Project {
  project_id  String @id @default(auto()) @map("_id") @db.ObjectId
  project_name String
  project_desc  String
  project_start_date DateTime
  project_end_date DateTime
  user User @relation(fields: [user_id], references: [user_id])
  user_id String @db.ObjectId
  project_reference ProjectReference[]
  project_type ProjectType
  project_status ProjectStatus @default(pending)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stages Stage[]
}


model Stage {
  stage_id String @id @default(auto()) @map("_id") @db.ObjectId
  stage_title String
  project Project @relation(fields: [project_id], references: [project_id])
  project_id String @db.ObjectId
  tasks Task[]
}

model Task {
  task_id String @id @default(auto()) @map("_id") @db.ObjectId
  task_title String
  task_desc String?
  stage Stage @relation(fields: [stage_id], references: [stage_id])
  stage_id String @db.ObjectId
}